package com.ibm.icu.text;


































































































































































































































class MultiplierSubstitution
  extends NFSubstitution
{
  private static final String copyrightNotice = "Copyright Â©1997-1998 IBM Corp.  All rights reserved.";
  































































































































































































































  double divisor;
  
































































































































































































































  MultiplierSubstitution(int pos, double divisor, NFRuleSet ruleSet, RuleBasedNumberFormat formatter, String description)
  {
    super(pos, ruleSet, formatter, description);
    



    this.divisor = divisor;
  }
  




  public void setDivisor(int radix, int exponent)
  {
    divisor = Math.pow(radix, exponent);
  }
  








  public boolean equals(Object that)
  {
    if (super.equals(that)) {
      MultiplierSubstitution that2 = (MultiplierSubstitution)that;
      
      return divisor == divisor;
    }
    return false;
  }
  









  public long transformNumber(long number)
  {
    return Math.floor(number / divisor);
  }
  








  public double transformNumber(double number)
  {
    if (ruleSet == null) {
      return number / divisor;
    }
    return Math.floor(number / divisor);
  }
  













  public double composeRuleValue(double newRuleValue, double oldRuleValue)
  {
    return newRuleValue * divisor;
  }
  




  public double calcUpperBound(double oldUpperBound)
  {
    return divisor;
  }
  







  char tokenChar()
  {
    return '<';
  }
}
